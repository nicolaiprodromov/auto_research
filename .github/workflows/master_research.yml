name: Master Research

on:
  schedule:
    - cron: '*/4 * * * *'
  workflow_dispatch:
    inputs:
      subject:
        description: 'Subject matter to research'
        required: false
        type: string
        default: 'Marvin Pontiac'

jobs:
  research:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Read Current Research
      id: read_research
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        GITHUB_OWNER: ${{ github.repository_owner }}
        GITHUB_REPO: ${{ github.event.repository.name }}
        GITHUB_BRANCH: ${{ github.ref_name }}
        RESEARCH_SUBJECT: ${{ github.event.inputs.subject || 'Marvin Pontiac' }}
      run: |
        python -m workflows.read_research > current_research.txt
    
    - name: Generate Search Terms
      id: search_terms
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        RESEARCH_SUBJECT: ${{ github.event.inputs.subject || 'Marvin Pontiac' }}
      run: |
        CURRENT_CONTENT=$(cat current_research.txt)
        python -m workflows.generate_search_terms "$CURRENT_CONTENT" > search_terms.txt
        echo "Search Terms Generated:"
        cat search_terms.txt
    
    - name: Search Term 1
      id: search1
      env:
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        TAVILY_API_URL: ${{ secrets.TAVILY_API_URL }}
      run: |
        TERM=$(sed -n '1p' search_terms.txt)
        if [ -n "$TERM" ]; then
          python -m workflows.tavily_search "$TERM" > search1.txt
        fi
    
    - name: Search Term 2
      id: search2
      env:
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        TAVILY_API_URL: ${{ secrets.TAVILY_API_URL }}
      run: |
        TERM=$(sed -n '2p' search_terms.txt)
        if [ -n "$TERM" ]; then
          python -m workflows.tavily_search "$TERM" > search2.txt
        fi
    
    - name: Search Term 3
      id: search3
      env:
        TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
        TAVILY_API_URL: ${{ secrets.TAVILY_API_URL }}
      run: |
        TERM=$(sed -n '3p' search_terms.txt)
        if [ -n "$TERM" ]; then
          python -m workflows.tavily_search "$TERM" > search3.txt
        fi
    
    - name: Combine Search Results
      id: combine
      run: |
        cat search1.txt search2.txt search3.txt > all_search_results.txt 2>/dev/null || true
        echo "Combined search results saved"
    
    - name: Synthesize Research
      id: synthesize
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        RESEARCH_SUBJECT: ${{ github.event.inputs.subject || 'Marvin Pontiac' }}
      run: |
        CURRENT_CONTENT=$(cat current_research.txt)
        SEARCH_RESULTS=$(cat all_search_results.txt)
        python -m workflows.synthesize_research "$CURRENT_CONTENT" "$SEARCH_RESULTS" > new_content.txt
        echo "New research content generated"
    
    - name: Append New Content
      run: |
        python -m workflows.append_research current_research.txt new_content.txt > final_content.txt
        echo "Content combined with timestamp"
    
    - name: Write Research to Repository
      env:
        PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        GITHUB_OWNER: ${{ github.repository_owner }}
        GITHUB_REPO: ${{ github.event.repository.name }}
        GITHUB_BRANCH: ${{ github.ref_name }}
      run: |
        TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
        FINAL_CONTENT=$(cat final_content.txt)
        python -m workflows.write_file "docs/index.md" "$FINAL_CONTENT" "Auto-research update: $TIMESTAMP"
